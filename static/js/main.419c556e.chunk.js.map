{"version":3,"sources":["component/item.js","component/Spinner.js","component/hoc.js","component/filme.js","App.js","serviceWorker.js","index.js"],"names":["Item","props","react_default","a","createElement","className","style","width","src","item","img","height","alt","name","description","href","Spinner","class","Hoc","HocComponent","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","key","value","charge","component_Spinner","Component","tab","Filme","map","el","index","App","_this2","setTimeout","setState","filme","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.419c556e.chunk.js","sourcesContent":["import React from 'react';\r\n \r\n\r\nfunction Item (props) {\r\n\r\n    return ( \r\n        <div className=\"item\">\r\n            <div className=\"card\" style={{ width: '18rem' }}>\r\n                <img className=\"card-img-top\" src={props.item.img} style={{ width: '285px', height: '300px' }} alt=\"Card image cap\" />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{props.item.name}   /></h5>\r\n                    <p className=\"card-text\">{props.item.description}</p>\r\n                    <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n                </div>\r\n            </div>\r\n        </div>      \r\n    );\r\n} \r\nexport default Item;","import React from 'react';\r\n\r\n\r\nfunction Spinner(props) {\r\n\r\n    return (\r\n        <div class=\"loader\"></div>\r\n    );\r\n}\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport Spinner from './Spinner';\r\nconst  Hoc = (HocComponent) =>{\r\n    return class Hoc extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                 \r\n            };\r\n        } \r\n    \r\n    \r\n    render() {\r\n        return ((this.props.charge) ? <HocComponent /> : <center><Spinner /> </center>)   \r\n    }}\r\n}\r\nexport default Hoc","import React, { Component }from 'react';  \r\nimport Item from './item'; \r\nimport Hoc from './hoc';\r\n\r\nlet tab = [ \r\n    {\r\n        name: \"Mia et le Lion Blanc\",\r\n        img:\"http://fr.web.img6.acsta.net/pictures/18/10/16/11/18/3360862.jpg\",\r\n        description:\"azerazerazerazerazerazer\"\r\n    },\r\n    {\r\n        name: \"Casablanca\",\r\n        img:\"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b3/CasablancaPoster-Gold.jpg/290px-CasablancaPoster-Gold.jpg\",\r\n        description:\"azerazerzaerzerzerazerzaer\"\r\n    },\r\n    {\r\n        name: \"Filme 3\",\r\n        img:\"http://www.ladefense.fr/sites/default/files/peur_sur_la_ville.jpg\",\r\n        description:\"azerazerzarzaerzerzea\"\r\n    },\r\n    {\r\n        name: \"Shazam\",\r\n        img:\"https://www.ecranlarge.com/uploads/image/001/080/shazam-affiche-1080678.jpg\",\r\n        description:\"zearzearzaerzaerzaerazerzaezea\"\r\n    },\r\n    {\r\n        name: \"Halloween\",\r\n        img:\"http://fr.web.img5.acsta.net/pictures/18/09/19/14/32/4251359.jpg\",\r\n        description:\"azerzaerzerzerzerzerzaeraz\"\r\n    },\r\n    {\r\n        name: \"From Hell\",\r\n        img:\"https://upload.wikimedia.org/wikipedia/en/thumb/6/66/From_Hell_film.jpg/220px-From_Hell_film.jpg\",\r\n        description:\"azrzaerzarzrzarazzarzrze\"\r\n    }\r\n] \r\n\r\n\r\nclass Filme extends Component {\r\n    constructor(props) {\r\n        super(props)  \r\n    } \r\n    render() {\r\n        return (\r\n            <div className=\"cadre\">\r\n                <div className=\"Liste\">\r\n                    {tab.map((el, index) => <Item item={el} key={index} />)} \r\n                </div>\r\n            </div > \r\n        ) \r\n    }}\r\n\r\nFilme = Hoc(Filme);\r\nexport default Filme;\r\n\r\n\r\n\r\n \r\n\r\n ","import React, {Component} from 'react';\nimport './App.css';\nimport Filme from './component/filme'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      charge: false\n    } \n\n  }\n\n  componentDidMount(){\n    setTimeout(()=>\n        {this.setState({\n              charge:true\n            })},1000\n    )\n    \n  }\n   \n\n\n  render() {\n    return (\n      <div>\n        <Filme charge={this.state.charge}/>\n      </div>\n    )\n  }\n} \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}